#pragma once	// include this header				// only once per source file#include "IQStruct.h"#include "Document.h"#include "Windows.h"////	Längenoffsets für die einzelnen ListH's. Array davon wird in der xWindStruct eingetragen//typedef struct {	ListH		theHandle;	long		theLine;}positionCache,*positionCacheP,**positionCacheH;#define CACHE			1				// 1: Caching möglich (ab Version 1.0.2), sonst 0#define CACHE_STEP		1000			// Anzahl der Cache-Entries, die gleichzeitig alloziert werden////	Diese Struktur hängt im Wind.MoreMem //typedef struct {	IQFileType	windowType;	short		floatVar;			// Tel 1/2/3 oder Tag/Monat/Jahr im Float	short		floatDisp;			// Was ist anzuzeigen (Alles etc.)	long		contentSize;		// Länge des Inhalts in Zeilen	long		lastKlick;			// Zeile, in der zuletzt selektiert wurde (Shift)	short		selectedNo;			// Anzahl der selektierten Einträge	Boolean		cacheEnable;		// Wenn 1, dann ist theUnion.cache gültig (kann trotzdem nil sein!)	union {	struct {		char		day;		char		month;		short		year;		char		woTag;				// Wochentag des Monatsersten		char		breite;				// Zeichenbreite und Höhe		short		zeilenHoehe;		char		theSelectedDay;		// Nummer des selektierten Tags		ListH		**l;				// Bei Tagesübersicht		short		arrayCounter;		ListHandle	list;		}schedule;#if CACHE		positionCacheH	cache;			// Cache der ListH-Anfänge#endif	}theUnion;}xWindStruct;	#define	XWIN			(*(xWindStruct**)xWindow)#define PREF_VERSION	1/*** *	In dieser Struktur werden alle Daten gesichert, die beim Speichern bzw. *	Laden der Einstellungen berücksichtigt werden sollen ***/typedef struct {	Byte		version;		// Versionskennung der Preferences = 1	int			language;		// Sprache für Datumsformate	short		display[MaxIQFileType]; // darzustellende Einträge als Bitarray	Str255		font;			// Default-Font	short		fontSize;		// und Größe	Str63		serPort;		// Port der seriellen Schnittstelle	short		aktOrganizer;	// letzter Organizer im Sharp-Menü	short		OffFlag;		// true = Organizer nach Übertragung ausschalten	short		SendFlag;		// zu sendende Gruppe	short		stadt;			// Stadt für das Senden der Uhrzeit	Boolean		OwFlag;			// true: Overwrite ist default beim Einlesen	Boolean		TimeSend;		// true: Uhrzeit mitsenden	Boolean		Idx[MaxIQFileType];	// selektierte Einträge im Empfangsdialog	Boolean		FloatShouldBeOpen;	// true: Float ist offen	Boolean		fieldNames;		// true: Feldnamen werden mitgedruckt	Boolean		printHeader;	// true: Seitenheader wird gedruckt	short		columnsPerPage;	// Zahl der Spalten	Point		FloatPos;		// Position vom Float} SaveEinst;extern SaveEinst		gS;			/* globale Einstellungen */void	main(void);void	DoAbout(void);void	DoMenu(int title,int entry);void	InitDoc(REG DocHandle d);	// Dokument erzeugen void	Exit(void);void	InitInstall(void);void	InitMenuChecks(void);void	InstallMenus(void);void	testidle(void);void	testclose(void);void	testactivate(void);