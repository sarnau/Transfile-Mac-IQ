#include "Document.h"#include "IQStruct.h"// Rückgabecodes der “CheckData”-Funktion, die eine ListHandle auf Fehlerfreiheit testettypedef enum {	CHKAlarmOff = -5,	// Alarm wurde ausgeschaltet	CHKDeltaCorr = -4,	// Start<->Enddatum wurde korrigiert	CHKDateCorr = -3,	// Datum wurde korrigiert	CHKKill = -2,		// Datensatz unbrauchbar => löschen	CHKNil = -1,		// ListHandle war NIL!	CHKNoErr = 0,		// kein Fehler	CHKDataLen,			// 1.Datenfeld zu lang	CHKBDataLen1,		// 2.Feld zu lang (Firmenanschrift bei Visitenkarten)	CHKBDataLen2,		// 3.Feld zu lang (Namen bei Visitenkarten)	CHKBDataLen3,		// 4.Feld zu lang	CHKEmptyData = 50,	// Datenfeld ist leer (nur bei “Daily Alarm” erlaubt)	CHKNoDate,			// es wurde kein Datum angegeben	CHKStartYear,		// Startjahr > Endjahr (bei Periodic)	CHKStartMonth,		// Startmonat > Endmonat (bei Periodic)	CHKStartDay,		// Starttag > Endtag (bei Periodic)	CHKAlarmtime,		// Alarm aktiviert, aber die Zeit fehlt (Scheduler)	CHKAlStartTime,		// Alarmzeit, aber keine Terminzeit (Scheduler)	CHKExpIllChar,		// illegales Zeichen im Betrag vom Expense-Manager	CHKExpValue			// Betrag im Expense-Manager zu groß} CheckErrorCode;VOID			FixListEntry(REG ListH l);CheckErrorCode	CorrectEntry(REG ListH l,REG WORD org,REG CheckErrorCode code);CheckErrorCode	CheckData(REG ListH l,WORD organizer);VOID			CheckListData(REG ListH *l,WORD org);VOID			CheckDoc(DocHandle d);WORD			StrCrLen(USTR s,WORD cranz);